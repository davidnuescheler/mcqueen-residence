{"version":3,"sources":["fetch-google.js"],"names":["inspect","require","client","setdefault","fetch","context","action","resourcePath","rootId","logger","request","secrets","content","timeout","HTTP_TIMEOUT","warn","owner","repo","ref","params","source","requestId","headers","uri","REPO_RAW_ROOT","encodeURIComponent","options","json","time","followAllRedirects","info","body","e","statusCode","error","status","response","elapsedTime","cause","code","depth","module","exports"],"mappings":"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","file":"fetch-google.js","sourceRoot":"../pages/master/src","sourcesContent":["/*\n * Copyright 2018 Adobe. All rights reserved.\n * This file is licensed to you under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License. You may obtain a copy\n * of the License at http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software distributed under\n * the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\n * OF ANY KIND, either express or implied. See the License for the specific language\n * governing permissions and limitations under the License.\n */\nconst { inspect } = require('util');\nconst client = require('request-promise-native');\nconst { setdefault } = require('ferrum');\n\n/**\n * Fetches the Markdown from google docs\n */\nasync function fetch(context, action, resourcePath, rootId) {\n  const { logger, request, secrets } = action;\n  const content = setdefault(context, 'content', {});\n  let timeout;\n  if (!secrets.HTTP_TIMEOUT) {\n    logger.warn('No HTTP timeout set, risk of denial-of-service');\n  } else {\n    timeout = secrets.HTTP_TIMEOUT;\n  }\n\n  // extract some tracing info\n  const {\n    owner, repo, ref,\n  } = request.params;\n  const source = `${owner}/${repo}/${ref}`;\n  const requestId = request.headers['x-request-id']\n    || request.headers['x-cdn-request-id']\n    || request.headers['x-openwhisk-activation-id']\n    || '';\n  const uri = `${secrets.REPO_RAW_ROOT}?path=${encodeURIComponent(resourcePath)}&rootId=${encodeURIComponent(rootId)}&src=${encodeURIComponent(source)}&rid=${encodeURIComponent(requestId)}`;\n  const options = {\n    uri,\n    json: false,\n    timeout,\n    time: true,\n    followAllRedirects: true,\n  };\n\n  logger.info(`fetching Markdown from ${options.uri}`);\n  try {\n    content.body = await client(options);\n  } catch (e) {\n    if (e.statusCode === 404) {\n      logger.error(`Could not find Markdown at ${options.uri}`);\n      setdefault(context, 'response', {}).status = 404;\n    } else if ((e.response && e.response.elapsedTime && e.response.elapsedTime > timeout) || (e.cause && e.cause.code && (e.cause.code === 'ESOCKETTIMEDOUT' || e.cause.code === 'ETIMEDOUT'))) {\n      // return gateway timeout\n      logger.error(`Gateway timout of ${timeout} milliseconds exceeded for ${options.uri}`);\n      setdefault(context, 'response', {}).status = 504;\n    } else {\n      logger.error(`Error while fetching Markdown from ${options.uri} with the following `\n        + `options:\\n${inspect(options, { depth: null })}`);\n      setdefault(context, 'response', {}).status = 502;\n    }\n    context.error = e;\n  }\n}\n\nmodule.exports = fetch;\n"]}